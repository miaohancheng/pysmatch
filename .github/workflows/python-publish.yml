name: Python Publish

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    name: Build and test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # 🚨 为 setuptools_scm 获取完整 tag 历史

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest-cov codecov
          pip install -e .  # 安装本地包（此时版本号来自 tag）

      - name: Run tests with coverage
        run: |
          pytest --cov=pysmatch --cov-report xml --cov-report term

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.xml
          flags: unittests
          name: codecov-coverage

  build-and-publish:
    name: Build and publish to PyPI and create GitHub release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [ build-and-test ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # 🚨 否则 setuptools_scm 无法识别版本

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel build twine setuptools-scm

      - name: Build package using PEP 517
        run: |
          python -m build

      - name: Check package metadata
        run: |
          twine check dist/*

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          repository_url: https://upload.pypi.org/legacy/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: "Release ${{ github.ref_name }}"
          body: "🎉 发布版本 ${{ github.ref_name }} 到 PyPI"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}