name: Deploy Sphinx Docs to GitHub Pages

# 触发条件：推送到 main 分支时触发
on:
  push:
    branches:
      - main  # 或者你的默认分支名，如 master

# 允许此 workflow 创建或批准 pull requests（对于 gh-pages action 可能需要）
permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest # 使用最新的 Ubuntu Runner

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # 检出你的代码

      - name: Set up Python
        uses: actions/setup-python@v5 # 设置 Python 环境
        with:
          python-version: '3.11' # 指定你项目使用的 Python 版本

      - name: Install system dependencies (Pandoc)
        run: |
          sudo apt-get update # 更新包列表
          sudo apt-get install -y pandoc # 安装 Pandoc

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          # 安装项目主要依赖 (如果文档构建需要导入项目代码)
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          # 安装文档构建相关依赖
          if [ -f docs/requirements.txt ]; then pip install -r docs/requirements.txt; fi
          # 安装项目本身，以便 autodoc 可以找到它
          pip install .

      - name: Build Sphinx documentation
        run: |
          cd docs  # 进入包含 Makefile 的目录
          make html # 运行构建命令
          # 或者直接使用 sphinx-build:
          # sphinx-build -b html source build/html

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4 # 使用部署 Action
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }} # 自动提供的 Token
          publish_dir: ./docs/build/html          # 指定包含 HTML 文件的目录
          # publish_branch: gh-pages  # 默认为 gh-pages 分支，可不写
          # user_name: 'github-actions[bot]' # 可选：自定义提交者信息
          # user_email: 'github-actions[bot]@users.noreply.github.com' # 可选